% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimise.R
\name{optimise_arbitrage}
\alias{optimise_arbitrage}
\title{Optimise income from arbitrage}
\usage{
optimise_arbitrage(
  data,
  price_from,
  exclude_from = NULL,
  max_charge_from = NULL,
  min_charge_from = NULL,
  capacity,
  c_rate,
  efficiency = 1,
  t_period = 0.5,
  init_charge = 0,
  deg_cost_per_cycle = 0
)
}
\arguments{
\item{data}{data frame, with a row for each settlement period and columns
for:
  \describe{
    \item{Spot Price.}{Numeric, mandatory.  Electricity spot price for each
      settlement period.}
    \item{Excluded Settlement Periods.}{Logical, optional.  Should the
      settlement period be excluded from arbitrage optimisation?}
    \item{Minimum Charge.}{Numeric, optional.  Minimum charge at beginning
      of settlement period.}
    \item{Maximum Charge.}{Numeric, optional.  Maximum charge at beginning
      of settlement period.}
 }}

\item{price_from}{string.  Name of column in \code{data} which refers to
the spot price.}

\item{exclude_from}{string. Name of column in \code{data} which refers to
excluded settlement periods, if applicable.}

\item{max_charge_from}{string.  Name of column in \code{data} which refers
to maximum charge, if applicable.}

\item{min_charge_from}{string.  Name of column in \code{data} which refers
to minimum charge, if applicable.}

\item{capacity}{numeric scalar, battery capacity.}

\item{c_rate}{numeric scalar, battery charge rate.}

\item{efficiency}{numeric scalar, charge/discharge efficiency of battery.}

\item{t_period}{numeric scalar, duration of a settlement period.}

\item{init_charge}{numeric scalar, initial charge on battery.}

\item{deg_cost_per_cycle}{numeric scalar, degradation cost per complete
charge/discharge cycle.}
}
\value{
Returns a data.frame with the same data as the \code{data} argument,
  as well additional data describing the battery operation for optimal
  arbitrage income.  The battery operation data is:
  \describe{
    \item{\code{charge_state}}{numeric, the state of charge at the beginning
      of the settlement period for optimal arbitrage.}
    \item{\code{discharge}}{numeric, the proportion of the settlement period
      that the battery should discharge for optimal arbitrage.}
    \item{\code{charge}}{numeric, the proportion of the settlement period
      that the battery should charge for optimal arbitrage.}
    \item{\code{opt_arb}}{numeric, income during settlement period for
      optimal arbitrage.}
    \item{\code{deg_cost}}{numeric, cost of degradation during settlement
      period.}
  }
}
\description{
\code{optimise_arbitrage} maximises the income from a battery storage
solution by using a linear programming based optimisation.
}
\details{
The arbitrage market involves charging the battery when the price of
electricity is low and discharging when it is high. The amount of energy that
the battery can store is limited by its capacity.  The charge rate is the
battery power normalised by capacity. For example, a battery with a:

\itemize{
  \item Charge rate of 1 will fully charge/discharge in 1 hour.
  \item Charge rate of 2 will fully charge/discharge in 30 minutes.
  \item Charge rate of .5 will fully charge/discharge in 2 hours.
}

The efficiency of the battery will impact the profitability of
charging/discharging since a certain amount of energy is lost as heat during
the process with comes at a cost.

The battery degrades as it is used.  In this simple model, a degradation
cost per charge/discharge cycle is assumed i.e. \code{deg_cost_per_cycle}.
For each settlement period, the cost of degradation is calculated based on
the proportion of a charge/discharge cycle occurring in the period.

Optionally, the \code{exclude_from} column of \code{data} can be used to
control whether settlement periods should be excluded from arbitrage
optimisation.  If the value is \code{TRUE}, the settlement period will be
excluded from arbitrage, or \code{FALSE} otherwise.

Optionally, the \code{max_charge_from} and/or \code{min_charge_from} columns
of \code{data} can be supplied.  If these arguments are not provided, then
for every settlement period, the minimum charge will be zero and the maximum
charge will be the value provided by the \code{capacity} argument.  If
\code{max_charge_from} and/or \code{min_charge_from} are set, then values
specify the maximum and minimum charge, respectively, at the beginning of
the corresponding settlement period.  Any value that is \code{NA} is
default to be zero for the minimum charge and the value provided by the
\code{capacity} argument for the maximum charge.
}
\examples{
optimise_arbitrage(data = data.frame(price = c(5.0, 5.0, 10.0, 10.0)),
    price_from = 'price', capacity = 1, c_rate = 1)
optimise_arbitrage(data = data.frame(price = c(5.0, 5.0, 10.0, 10.0)),
    price_from = 'price', capacity = 1, c_rate = 1, efficiency = .7)
optimise_arbitrage(data = data.frame(price = c(5.0, 5.0, 10.0, 10.0),
                                     exclude = c(0, 1, 1, 0)),
    price_from = 'price', capacity = 1, c_rate = 1, efficiency = .7)
optimise_arbitrage(data = data.frame(price = c(5.0, 5.0, 10.0, 10.0),
                                     exclude = c(0, 1, 1, 0),
                                     max_charge = c(NA, .4, NA, NA),
                                     min_charge = c(NA, .2, NA, NA)),
    price_from = 'price', capacity = 1, c_rate = 1, efficiency = .7)
optimise_arbitrage(data = data.frame(price = c(5.0, 5.0, 10.0, 10.0)),
    price_from = 'price', capacity = 1, c_rate = 1, deg_cost_per_cycle = 2.0)
}
